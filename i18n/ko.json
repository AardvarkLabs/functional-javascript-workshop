{
  "title": "FUNCTIONAL JAVASCRIPT IS GOOD",
  "subtitle": "\u001b[23mSelect an exercise and hit \u001b[3mEnter\u001b[23m to begin",
  "common": {
    "exercise": {
      "fail": {
        "missing_deps": "You need to install all of the dependencies you are using in your solution (e.g. lodash)",
        "module_not_found": "Could not find your file. Make sure the path is correct.",
        "must_export_function": "You should always return a function using the module.exports object."
      },
      "input": "input:      %s",
      "submission": "submission: %s",
      "solution": "solution:   %s"
    }
  },
  "exercise": {
    "Hello World": "헬로우 월드",
    "Higher Order Functions": "높은 순위의 함수",
    "Basic: Map": "기초: Map",
    "Basic: Filter": "기초: Filter",
    "Basic: Every Some": "기초: Every, Some",
    "Basic: Reduce": "기초: Reduce",
    "Basic: Recursion": "기초: Recursion",
    "Basic: Call": "기초: Call",
    "Partial Application without Bind": "바인드없는 부분 애플리케이션",
    "Partial Application with Bind": "바인드있는 부분 애플리케이션",
    "Implement Map with Reduce": "Reduce로 Map 구현하기",
    "Function Spies": "함수 스파이",
    "Blocking Event Loop": "블로킹 이벤트 루프",
    "Trampoline": "트램폴린",
    "Async Loops": "비동기 반복",
    "Recursion": "재귀",
    "Currying": "Currying",
    "Function Call": "함수 호출"
  },
  "exercises": {
    "Basic: Map": {
      "didnt_use_map": "Array#map을 사용하지 않았습니다.",
      "used_map": "야호!  Array#map를 사용했습니다."
    },
    "Basic: Every Some": {
      "found_good_lists": "%d 개의 좋은 목록을 발견했습니다!"
    },
    "Basic: Call": {
      "matched_objects": "Matched %d of %d valid objects from %d total."
    },
    "Higher Order Functions": {
      "call_log": "함수가 %d 번 호출되었습니다."
    },
    "Function Spies": {
      "call_times": "Method called %d times.",
      "incorrect_return": "Check your function's return value!",
      "incorrect_this": "Check the function's this! Hint: Function#apply",
      "not_all_args": "Check you are passing ALL the arguments! Hint: Function#apply"
    },
    "Trampoline": {
      "intro": "repeating %d times",
      "result": "Successfully executed %d times."
    },
    "Async Loops": {
      "all_loaded": "All %d users loaded!",
      "bad_result": "expected: \n%s\n but got:\n%s",
      "took_too_long": "Took too long!"
    },
    "Currying": {
      "five_words": "This,problem,has,been,solved"
    }
  }
}
